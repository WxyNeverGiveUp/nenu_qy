<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:base.properties</value>
                <value>classpath:extend.properties</value>
            </list>
        </property>
    </bean>


	<!-- 数据源    -->
	<bean id="abstractDataSource" abstract="true"
		class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="idleConnectionTestPeriodInMinutes" value="60" />
		<property name="idleMaxAgeInMinutes" value="240" />
		<property name="maxConnectionsPerPartition" value="30" />
		<property name="minConnectionsPerPartition" value="10" />
		<property name="partitionCount" value="3" />
		<property name="acquireIncrement" value="5" />
		<property name="statementsCacheSize" value="100" />
		<property name="releaseHelperThreads" value="3" />
	</bean>

    <bean id="dataSource" parent="abstractDataSource">
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="jdbcUrl" value="jdbc:mysql://${db.host}:${db.port}/db_nenu_qy?characterEncoding=utf8&amp;defaultFetchSize=25&amp;useLocalSessionState=true&amp;elideSetAutoCommit=true&amp;useUsageAdvisor=false&amp;useReadAheadInput=false&amp;useUnbufferedInput=false&amp;cacheServerConfiguration=true&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull" />
    </bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="com.pandawork.core.framework.dao.mybatis.SqlSessionFactoryBean">
		<!-- db datasource -->
		<property name="dataSource" ref="dataSource" />
		<!-- 实体目录 -->
		<property name="typeAliasesPackage" value="com.pandawork.nenu.oa.common.entity;com.pandawork.nenu.oa.common.dto" />

		<property name="mapperLocations">
			<list>
				<!--这个要配置 例如 classpath:com/pandawork/test/mapper/**/*Mapper.xml -->
				<value>classpath:com/pandawork/nenu/oa/mapper/**/*mapper.xml
				</value>
			</list>
		</property>
		<!-- 非接口实现的配置文件 -->
	</bean>

	<bean id="sqlSessionTemplate"
		class="com.pandawork.core.framework.dao.mybatis.dataBaseSharing.template.RWSqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- 通过扫描的模式，扫描目录下所有的mapper， 根据对应的mapper.xml为其生成代理类 -->
	<bean id="mapper" class="com.pandawork.core.framework.dao.mybatis.dataBaseSharing.template.RWMapperScannerConfigurer">
		<property name="basePackage" value="com.pandawork.nenu.oa.mapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
</beans>
